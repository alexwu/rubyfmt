#!/bin/bash
set -euxo pipefail

TAG=$(git describe --exact-match HEAD)
RELEASE_DIR="tmp/releases/${TAG}-$(uname -s)/"

./script/ci
rm -rf "${RELEASE_DIR}"

mkdir -p "${RELEASE_DIR}"
mkdir -p "${RELEASE_DIR}/lib/"
mkdir -p "${RELEASE_DIR}/include/"

cargo build
cargo build --release

cp target/release/rubyfmt-main "${RELEASE_DIR}/rubyfmt"
pwd
cp target/debug/rubyfmt-main "${RELEASE_DIR}/rubyfmt-debug"
pwd
cp target/release/librubyfmt.a "${RELEASE_DIR}/lib/librubyfmt.a"
pwd
cp target/debug/librubyfmt.a "${RELEASE_DIR}/lib/librubyfmt-debug.a"
pwd
cp librubyfmt/include/rubyfmt.h "${RELEASE_DIR}/include/rubyfmt.h"
pwd
cp RELEASE_README.md "${RELEASE_DIR}/RELEASE_README"

# check the binary
RES=$(echo 'a(1)' | "${RELEASE_DIR}/rubyfmt")
if [ "$RES" != "a(1)" ]; then
    echo "formatting failed"
    exit 1
fi

tar -cvz -f "rubyfmt-${TAG}-$(uname -s).tar.gz" "${RELEASE_DIR}"
